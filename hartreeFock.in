Atom {
  Z = Cs;
  A = 133;
}

HartreeFock {
  core = [Xe]; // Note: if you change atoms, you'll also need to change core!
  valence = 7sp;
  sortOuput = false;
  method; // HartreeFock(dflt), Hartree
}

Grid {
  r0 = 1e-7;
  rmax = 120.0;
  ngp = 3000;
  type;
  b;
}

// You can use this to read input options from this file
PolarisationOperator {
  myInput1 = 1;
  myInput2 = 2;
}

// Modules:
//   Each Module/MatrixElements will be run in order.
//   You can comment-out just the block name, and the block will be skiped.

// This module calculates the Bohr-BohrWeisskopf effect:
// Leave options blank to use defaults, or add numbers to over-ride them
Module::BohrWeisskopf {
  mu;
  I;
  rrms;
}

// This one writes orbitals (wavefunctions) to text file for plotting
// Module::WriteOrbitals { label = outputLabel; }
